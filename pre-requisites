There are few pre requisites before installing K8s using ansible. 

=====Update the host name on all the systems=====

Type the hostnamectl command :


#hostnamectl set-hostname newNameHere




Next Edit the /etc/hosts file:

#sudo nano /etc/hosts

Replace any occurrence of the existing computer name with your new one.
Add all host name in the file 
  	192.168.1.XXX - master
	192.168.1.XXX - node01
	192.168.1.XXX - node02 


Reboot the system to make sure that changes are permanent

#sudo reboot								


======Generate & Copy the key to all the hosts to allow password less login ==============

- in case you want to create a new user for this please follow this link - 
https://www.digitalocean.com/community/tutorials/initial-server-setup-with-centos-7

root@infra-virtual-machine:~# ssh-keygen
Generating public/private rsa key pair.
Enter file in which to save the key (/root/.ssh/id_rsa):
Created directory '/root/.ssh'.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /root/.ssh/id_rsa.
Your public key has been saved in /root/.ssh/id_rsa.pub.
The key fingerprint is:
SHA256:ovNc0gXss5i5yln28PIHvWENlPSQtVnKcG+AiQx9LLY root@infra-virtual-machine
The key's randomart image is:
+---[RSA 2048]----+
|      .+ ++*+ .  |
|       .* O* B   |
|       .o=  * o  |
|       .E..  .   |
|      . S..o     |
|     . *.++ .    |
|    o O +o o     |
|   . B.B  o      |
|    +.+o+.       |
+----[SHA256]-----+
root@infra-virtual-machine:~# cat .ssh/id_rsa.pub
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDQzE5S1/9figo306BKvH20DHofJoux8vanxL7dRbe74OrmUPPgtNXtzTKNKJbxwUzzHzT5qteCVonLO0VAuo3B8hAG+fqjLHzez5c5Zwhfe7H4r+u5PG4C66sS9uHpLcpB7gCPg1PpKhwvpn7x0oX4StJdB+DG6DRDtpEICkWVVsTj4xvHj3HEZHrgRKxCp0i2sHICTMnLh5+VEvS9leaBX1JZk8sdYVoKClo/cSGbGixZmoQkTV/OBCUH7qycCxAdcfrSfFvLxz6viVBUifVWss+tBYFTxLLPvuZ3SW59av6CP6oowHcv8dMoggszYQgAFRzH62AaMCxB6azsYKhT root@master


---- ON ALL OTHER NODES -- run below command on all other nodes --- 


cat >> ~/.ssh/authorized_keys <<EOF
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDQzE5S1/9figo306BKvH20DHofJoux8vanxL7dRbe74OrmUPPgtNXtzTKNKJbxwUzzHzT5qteCVonLO0VAuo3B8hAG+fqjLHzez5c5Zwhfe7H4r+u5PG4C66sS9uHpLcpB7gCPg1PpKhwvpn7x0oX4StJdB+DG6DRDtpEICkWVVsTj4xvHj3HEZHrgRKxCp0i2sHICTMnLh5+VEvS9leaBX1JZk8sdYVoKClo/cSGbGixZmoQkTV/OBCUH7qycCxAdcfrSfFvLxz6viVBUifVWss+tBYFTxLLPvuZ3SW59av6CP6oowHcv8dMoggszYQgAFRzH62AaMCxB6azsYKhT root@master
EOF


create this directory if doesnt exist 

root@node02:~# mkdir -p ~/.ssh/		

root@node02:~# cat >> ~/.ssh/authorized_keys <<EOF
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDQzE5S1/9figo306BKvH20DHofJoux8vanxL7dRbe74OrmUPPgtNXtzTKNKJbxwUzzHzT5qteCVonLO0VAuo3B8hAG+fqjLHzez5c5Zwhfe7H4r+u5PG4C66sS9uHpLcpB7gCPg1PpKhwvpn7x0oX4StJdB+DG6DRDtpEICkWVVsTj4xvHj3HEZHrgRKxCp0i2sHICTMnLh5+VEvS9leaBX1JZk8sdYVoKClo/cSGbGixZmoQkTV/OBCUH7qycCxAdcfrSfFvLxz6viVBUifVWss+tBYFTxLLPvuZ3SW59av6CP6oowHcv8dMoggszYQgAFRzH62AaMCxB6azsYKhT root@master
EOF
root@node02:~#

From master node, perform ssh to node01 and node02. It should work fine without asking for any password.



==================Install ansible on master node================================



- enable epel repo
#yum install epel-release

[root@master ~]# yum install epel-release
Loaded plugins: fastestmirror, langpacks
Determining fastest mirrors
 * base: mirror.nonstop.co.il
 * extras: mirror.nonstop.co.il
 * updates: mirror.nonstop.co.il
base                                                         | 3.6 kB  00:00:00
extras                                                       | 2.9 kB  00:00:00
updates                                                      | 2.9 kB  00:00:00
(1/4): base/7/x86_64/group_gz                                | 153 kB  00:00:01
(2/4): extras/7/x86_64/primary_db                            | 205 kB  00:00:02
(3/4): base/7/x86_64/primar 5% [=                 ] 336 kB/s | 598 kB  00:00:29 ETA 
..
..
..
..
Running transaction
  Installing : epel-release-7-11.noarch                                         1/1
  Verifying  : epel-release-7-11.noarch                                         1/1

Installed:
  epel-release.noarch 0:7-11

Complete!
[root@master ~]#


- Once the repository is installed, install Ansible with yum:

#yum install ansible

[root@master ~]# yum install ansible
Loaded plugins: fastestmirror, langpacks
Loading mirror speeds from cached hostfile
epel/x86_64/metalink                                         | 6.2 kB  00:00:00
...
...
...
 python2-jmespath                       noarch    0.9.4-2.el7       epel       41 k
 python2-pyasn1                         noarch    0.1.9-7.el7       base      100 k
 sshpass                                x86_64    1.06-2.el7        extras     21 k

Transaction Summary
====================================================================================
Install  1 Package (+18 Dependent packages)

Total download size: 21 M
Installed size: 123 M
Is this ok [y/d/N]: y
...
...
...
  python2-httplib2.noarch 0:0.18.1-3.el7
  python2-jmespath.noarch 0:0.9.4-2.el7
  python2-pyasn1.noarch 0:0.1.9-7.el7
  sshpass.x86_64 0:1.06-2.el7

Complete!
[root@master ~]#



- check ansible version installed 
[root@master ~]# ansible --version
ansible 2.9.10
  config file = /etc/ansible/ansible.cfg
  configured module search path = [u'/root/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python2.7/site-packages/ansible
  executable location = /usr/bin/ansible
  python version = 2.7.5 (default, Apr  2 2020, 13:16:51) [GCC 4.8.5 20150623 (Red Hat 4.8.5-39)]
[root@master ~]#



=====================Configure Ansible host ===========================

- Configure Ansible host 

#vi /etc/ansible/hosts
Example hosts file
[group_name]
alias ansible_ssh_host=your_server_ip


#vi /etc/ansible/hosts
[servers]
master ansible_ssh_host=192.168.1.XXX
node01 ansible_ssh_host=192.168.1.XXX
node02 ansible_ssh_host=192.168.1.XXX


---- Tell Ansible that it should connect to servers in the “servers” group with the some specific user

#mkdir -p /etc/ansible/group_vars

[root@master ~]# mkdir -p  /etc/ansible/group_vars
[root@master ~]#


Within this folder, we can create YAML-formatted files for each group we want to configure:
#nano /etc/ansible/group_vars/servers
---
ansible_ssh_user: user-name 

[root@master ~]# cat /etc/ansible/group_vars/servers
---
ansible_ssh_user: root
[root@master ~]#



- Test if ansible can ping all the servers or not. Ping all of the servers you configured by typing:

#ansible -m ping all

[root@master ~]# ansible -m ping all
The authenticity of host '192.168.1.197 (192.168.1.197)' can't be established.
ECDSA key fingerprint is SHA256:grPKXbyvXsMFa1C6Piwyg63RC4GW6tg30OvXCeNWWho.
ECDSA key fingerprint is MD5:39:68:4d:e8:81:49:ad:13:a0:1b:95:c5:70:b3:27:a7.
Are you sure you want to continue connecting (yes/no)? yesnode02 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python"
    },
    "changed": false,
    "ping": "pong"
}
node01 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python"
    },
    "changed": false,
    "ping": "pong"
}

master | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: Warning: Permanently added '192.168.1.197' (ECDSA) to the list of known hosts.\r\nPermission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
[root@master ~]#

- Add ssh key to master server as well if you want to ping you master ansible server 
[root@master ~]#  cat >> ~/.ssh/authorized_keys <<EOF
> ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDQzE5S1/9figo306BKvH20DHofJoux8vanxL7dRbe74OrmUPPgtNXtzTKNKJbxwUzzHzT5qteCVonLO0VAuo3B8hAG+fqjLHzez5c5Zwhfe7H4r+u5PG4C66sS9uHpLcpB7gCPg1PpKhwvpn7x0oX4StJdB+DG6DRDtpEICkWVVsTj4xvHj3HEZHrgRKxCp0i2sHICTMnLh5+VEvS9leaBX1JZk8sdYVoKClo/cSGbGixZmoQkTV/OBCUH7qycCxAdcfrSfFvLxz6viVBUifVWss+tBYFTxLLPvuZ3SW59av6CP6oowHcv8dMoggszYQgAFRzH62AaMCxB6azsYKhT root@master
> EOF
[root@master ~]#



- Ping again to get correct result - 
[root@master ~]# ansible -m ping all

node01 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python"
    },
    "changed": false,
    "ping": "pong"
}
node02 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python"
    },
    "changed": false,
    "ping": "pong"
}
master | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python"
    },
    "changed": false,
    "ping": "pong"
}
[root@master ~]#


- To run a command only to specific host run below - 
#ansible -m shell -a 'free -m' host1

[root@master ~]# ansible -m shell -a "free -m" node02
node02 | CHANGED | rc=0 >>
              total        used        free      shared  buff/cache   available
Mem:            990         153         724           6         112         707
Swap:           819           0         819
[root@master ~]#



- To run a command only to specific server group run below - 
#ansible -m shell -a 'free -m' <group-name>

[root@master ~]# ansible -m shell -a "free -m" servers
node02 | CHANGED | rc=0 >>
              total        used        free      shared  buff/cache   available
Mem:            990         154         724           6         112         707
Swap:           819           0         819
node01 | CHANGED | rc=0 >>
              total        used        free      shared  buff/cache   available
Mem:            990         158         720           6         112         703
Swap:           819           0         819
master | CHANGED | rc=0 >>
              total        used        free      shared  buff/cache   available
Mem:            990         257         248           6         484         573
Swap:           819           0         819
[root@master ~]#



- You can give multiple hosts 
#ansible -m ping host1:host2

[root@master ~]# ansible -m ping worker01:worker02
worker02 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python"
    },
    "changed": false,
    "ping": "pong"
}
worker01 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python"
    },
    "changed": false,
    "ping": "pong"
}
[root@master ~]#

